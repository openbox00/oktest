
/* @LICENCE("Open Kernel Labs, Inc.", "2014")@ */

/* WARNING: Autogenerated file. Do not edit.
 *
 * This file crated by di_dsl.py from libs/driverv2/include/device_if.di
 *
 */

#ifndef _device_IF_H
#define _device_IF_H
#else
#error File should only be included via concrete header for module
#endif

#include <stdint.h>
/* Forward declaration */
struct device_interface;

/* Interface methods */
typedef int (*device_setup_fn)(struct device_interface *, void *, struct resource *);
typedef int (*device_enable_fn)(struct device_interface *, void *);
typedef int (*device_disable_fn)(struct device_interface *, void *);
typedef int (*device_poll_fn)(struct device_interface *, void *);
typedef int (*device_interrupt_fn)(struct device_interface *, void *, int);
typedef int (*device_num_interfaces_fn)(struct device_interface *, void *);
typedef struct generic_interface * (*device_get_interface_fn)(struct device_interface *, void *, int);

/* Method table */
struct device_ops {
    device_setup_fn setup;
    device_enable_fn enable;
    device_disable_fn disable;
    device_poll_fn poll;
    device_interrupt_fn interrupt;
    device_num_interfaces_fn num_interfaces;
    device_get_interface_fn get_interface;
};

struct device_interface {
    int interface_type;
    void *device;
    struct device_ops ops;
};

#define SETUP_DEVICE_PROTOS(DEV_NAME) \
    static int device_setup_impl(struct device_interface *, struct DEV_NAME *, struct resource *); \
    static int device_enable_impl(struct device_interface *, struct DEV_NAME *); \
    static int device_disable_impl(struct device_interface *, struct DEV_NAME *); \
    static int device_poll_impl(struct device_interface *, struct DEV_NAME *); \
    static int device_interrupt_impl(struct device_interface *, struct DEV_NAME *, int); \
    static int device_num_interfaces_impl(struct device_interface *, struct DEV_NAME *); \
    static struct generic_interface * device_get_interface_impl(struct device_interface *, struct DEV_NAME *, int); \


#define SETUP_DEVICE_OPS() \
    static struct device_ops device_ops = { \
        (device_setup_fn) device_setup_impl, \
        (device_enable_fn) device_enable_impl, \
        (device_disable_fn) device_disable_impl, \
        (device_poll_fn) device_poll_impl, \
        (device_interrupt_fn) device_interrupt_impl, \
        (device_num_interfaces_fn) device_num_interfaces_impl, \
        (device_get_interface_fn) device_get_interface_impl, \
    };


static inline int
device_setup(struct device_interface *interface, struct resource * resources)
{
    return interface->ops.setup(interface, interface->device, resources);
}

static inline int
device_enable(struct device_interface *interface)
{
    return interface->ops.enable(interface, interface->device);
}

static inline int
device_disable(struct device_interface *interface)
{
    return interface->ops.disable(interface, interface->device);
}

static inline int
device_poll(struct device_interface *interface)
{
    return interface->ops.poll(interface, interface->device);
}

static inline int
device_interrupt(struct device_interface *interface, int interrupt)
{
    return interface->ops.interrupt(interface, interface->device, interrupt);
}

static inline int
device_num_interfaces(struct device_interface *interface)
{
    return interface->ops.num_interfaces(interface, interface->device);
}

static inline struct generic_interface *
device_get_interface(struct device_interface *interface, int interface_num)
{
    return interface->ops.get_interface(interface, interface->device, interface_num);
}
