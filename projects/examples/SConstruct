from kenge import KengeBuild
from opts import get_option_arg

# Make it easier to raise UserErrors
import SCons.Errors
UserError = SCons.Errors.UserError

#############################################################################
## Setup build
#############################################################################
build = KengeBuild()

kcell = build.Kernel()

# Create a cell for each example, ensure valid multi-cell setup

valid_examples = ["hello", "args", "pds_zones", "pingpong", "echo", "chatterbox", "decrypt", "oklinux", "empty"]

# Do not add reverse lookups! The names in the valid_multicell lookup
# are the names of cells which have ownership of the serial driver.
# A root cell's partner cells will all get IPC caps to its main thread
# eg. echo has serial, chatterbox does not
valid_multicell = { 
    "echo" : ["chatterbox", "decrypt"],
    "oklinux" : ["decrypt"] }

serial_lookup = {
    "hello" : True,
    "args" : True,
    "pds_zones" : True,
    "pingpong" : True,
    "echo" : True,
    "chatterbox" : False,
    "oklinux" : True,
    "decrypt" : False,
    "empty" : False
    }

example_list = get_option_arg(build, 'EXAMPLE', None, valid_examples, True)
if not example_list:
    raise UserError, "No examples specified"
for example in example_list:
    if example not in valid_examples:
        raise UserError, "Invalid example '%s' specified" % example

# Single cell
if not len(example_list) > 1:
    root_cell = example_list[0]
# Multicell checks
else:
    #if build.kernel == "nano":
    #    raise UserError, "Nano kernel does not support multicell"
    root_cell = None
    valid_cells = []
    for example in example_list:
        if example in valid_multicell:
            if root_cell: # root cell already found!
                raise UserError, "Invalid multicell setup: " \
                    "Cell '%s' not compatible with Cell '%s'" % \
                    (example, root_cell)
            root_cell = example
            valid_cells = valid_multicell[example]

    if not root_cell:
        raise UserError, "Invalid multicell setup: Nobody has serial driver"

    for example in example_list:
        if example == root_cell:
            continue
        if example not in valid_cells:
            raise UserError, "Invalid multicell setup: " \
                "Cell '%s' not compatible with Cell '%s'" % \
                (example, root_cell)

example_cells = []
for example in example_list:
    if example == root_cell:
        has_serial = True
    else:
        has_serial = False
    if example == "oklinux":
        celldir = "linux"
    else:
        celldir = "examples"
    cell = build.Cell("cells/%s" % celldir,
                              name="examples",
                              example_name=example,
                              has_serial=has_serial)
    if build.kernel == "nano":
        cell.Append(CPPDEFINES = ["NANOKERNEL"])

    # Assign IPC caps to all partner cells in multicell config
    if example != root_cell:
        cell.env_append(None,
                        key = "ROOT_CELL_CAP",
                        cap = "/%s/main" % root_cell)
        if example == "decrypt":
            cell.env_append(None,
                            key = "CAESAR_CIPHER_SHIFT",
                            value = 1)
    if example == root_cell and 'decrypt' in example_list:
        cell.env_append(None,
                        key = "SHMEM_CAP",
                        cap = "/decrypt/shmem")
        cell.env_append(None,
                        key = "DECRYPT_CELL_CAP",
                        cap = "/decrypt/main")

    if build.kernel == "nano":
        num_spaces = 1
    else: # Share the spaces between the cells
        num_spaces = 256 / len(example_list)
    cell.set_cell_config(spaces=num_spaces)

    example_cells.append(cell)


pools = kcell.DefaultMemoryPools()

build.Image(kernel = kcell, pools = pools, cells = example_cells)
